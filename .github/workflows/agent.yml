name: Agent

permissions:
  contents: read
  actions: write

on:
  push:
    branches:
      - master
  pull_request:

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        job_name:
          - linux-amd64
          - linux-arm64
          - linux-armv7
          - macos-amd64
          - macos-arm64
          - windows-amd64

        include:
          - job_name: linux-amd64
            os: ubuntu-22.04
            path: |
              target/release/netsody
              target/release/*.deb
              target/release/*.pkg.tar.*

          - job_name: linux-arm64
            os: [ self-hosted, linux, ARM64 ]
            path: |
              target/release/netsody
              target/release/*.deb
              target/release/*.pkg.tar.*

          - job_name: linux-armv7
            os: ubuntu-22.04
            path: |
              target/release/netsody
              target/release/*.deb
              target/release/*.pkg.tar.*

          - job_name: macos-amd64
            os: macOS-13
            path: target/release/netsody

          - job_name: macos-arm64
            os: macOS-latest
            path: target/release/netsody

          - job_name: windows-amd64
            os: windows-2022
            path: target/release/netsody.exe

    name: Build netsody-agent on ${{ matrix.job_name }}
    runs-on: ${{ matrix.os }}

    steps:
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        if: success() && matrix.job_name == 'linux-arm64'

      - name: Install libssl-dev
        run: apt-get update -qq && apt-get install -y libssl-dev
        if: success() && matrix.job_name == 'linux-arm64'

      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Build netsody-agent
        run: cargo build --verbose --package netsody-agent --features dns --release
        if: ${{ success() && matrix.job_name != 'linux-armv7' }}

      - name: Install cross (Docker-based cross-compile)
        run: cargo install cross --git https://github.com/cross-rs/cross
        if: ${{ success() && matrix.job_name == 'linux-armv7' }}

      - name: Build netsody-agent on armv7
        run: |
          cross build --target armv7-unknown-linux-gnueabihf -p netsody-agent --features dns --release
          mv target/armv7-unknown-linux-gnueabihf/* target/
        if: ${{ success() && matrix.job_name == 'linux-armv7' }}

      - name: Bundle netsody-agent.deb
        run: ./netsody-agent/bundle-debian.sh --release
        if: success() && startsWith(matrix.job_name, 'linux-')

      - name: Bundle netsody-agent.pkg.tar (Arch)
        run: ./netsody-agent/bundle-arch.sh --release
        if: success() && startsWith(matrix.job_name, 'linux-')

      - name: Upload netsody-agent artifact
        uses: actions/upload-artifact@v4
        with:
          name: netsody-${{ matrix.job_name }}
          path: ${{ matrix.path }}
        if: always()